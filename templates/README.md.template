# <%- projectPackageName %>

> <%- projectOverview %>

- Feature 1
- Feature 2

## Table of Contents

<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->

- [Installation](#installation)
- [Usage](#usage)
- [FAQ](#faq)
  - [Uh oh, something went wrong!](#uh-oh-something-went-wrong)
  - [I wish something was different…](#i-wish-something-was-different)
  - [Can I contribute code?](#can-i-contribute-code)
  - [How do I get setup for development?](#how-do-i-get-setup-for-development)
  - [What's the development workflow?](#whats-the-development-workflow)
  - [Why are dev tools scripts so verbose?](#why-are-dev-tools-scripts-so-complex-and-verbose)
  - [Why are there so many config files?](#why-are-there-so-many-config-files)
  - [Why isn't the build bundled or minified?](#why-isnt-the-build-bundled-or-minified)
  - [Why do my files automatically change?](#why-do-my-files-automatically-change)
  - [Why does the Babel build script contain the `--source-maps` option?](#why-does-the-babel-build-script-contain-the---source-maps-option)
  - [Why does the `format:eslint` script ignore errors?](#why-does-the-formateslint-script-ignore-errors)
  - [My question isn't answered…](#my-question-isnt-answered)
- [Roadmap](#roadmap)
- [Related](#related)
- [Inspiration](#inspiration)
- [Credits](#credits)
- [License](#license)

<!-- END doctoc generated TOC please keep comment here to allow auto update -->

## Installation

This module is distributed via [npm](https://www.npmjs.com/) which is bundled with [Node.js](https://nodejs.org).

```bash
npm install <%- projectPackageName %> --save
```

OR

```bash
npm install <%- projectPackageName %> --save-dev
```

## Usage

```bash
npm start
```

## FAQ

### Uh oh, something went wrong!

Sorry about that. Please submit a bug report using the [GitHub issue tracker](<%- gitHubRepoUrl %>/issues).

### I wish something was different…

Keen to hear all ideas! Create an enhancement request using the [GitHub issue tracker](<%- gitHubRepoUrl %>/issues).

### Can I contribute code?

Yes please!

> First time contributing code to an open source project on GitHub? Check out this [free video tutorial](https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github).

### How do I get setup for development?

1. If you don't have write access to this repo, [fork it](<%- gitHubRepoUrl %>/fork).
1. Clone the repo.
1. Install dependencies: `npm install`
1. Ensure everything is working: `npm run validate`

### What's the development workflow?

1. Create a new git branch
1. Create a system-wide link for use in other directories: `npm link`
1. `npm run dev`
1. Write code
1. Create new temporary directory to test app population named `create-exposed-app-test-my-new-feature`
1. Run `npm init exposed-app` or `npx create-exposed-app` in `create-exposed-app-test-my-new-feature` directory

   Note: It should use the system-wide local link to your project

1. Commit changes to your branch
1. Push changes to GitHub
1. Submit a [pull request on GitHub](<%- gitHubRepoUrl %>/pulls)

Once complete:

1. Remove the system-wide link: `npm unlink`
1. Remove the temporary test directory `create-exposed-app-test-my-new-feature`

### Why are the dev tools scripts so verbose?

See [### Why are the dev tools scripts so verbose?

See [ADR-002: Prefer Configurable Dev Tools](docs/adr/002-prefer-configurable-dev-tools.md).

### Why are there so many config files?

See [ADR-003: Prefer Multiple Config Files](docs/adr/003-prefer-multiple-config-files.md).

### Why isn't the build bundled or minified?

See [ADR-004: Minimally Transform Source Code During Build](docs/adr/004-minimally-transform-source-code-during-build.md).

### Why do my files automatically change?

Files are automatically formatted. See [ADR-005: Format Files](docs/adr/005-format-files.md) and [ADR-006: Format Files Programmatically](docs/adr/006-format-files-programmatically.md).

### Why does the Babel build script contain the `--source-maps` option?

This option is available in the Babel config file (`sourceMaps: true`), but has diffrent behaviour. Only the command line supports the creation of `.map` files. See [https://github.com/babel/babel/issues/5261](https://github.com/babel/babel/issues/5261).

### Why does the `format:eslint` script ignore errors?

Linting errors should not be reported when formatting, that it was the `lint` command is for.

Errors are ignored by appending the following: `>/dev/null 2>&1 || true`.

### My question isn't answered…

Ask away using the [GitHub issue tracker](<%- gitHubRepoUrl %>/issues).

## Roadmap

- Feature 1
- Feature 2

## Related

- [Project 1](https://example.com)
- [Project 2](https://example.com)

## Inspiration

- [Project 1](https://example.com)
- [Project 2](https://example.com)

## Credits

Authored and maintained by <%- markdownAuthor %>

To all [contributors](<%- gitHubRepoUrl %>/graphs/contributors) (if you exist) - thank you!

## License

Open source [licensed as MIT](<%- gitHubRepoUrl %>/blob/master/LICENSE).
